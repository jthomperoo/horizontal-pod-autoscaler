name: main
on:
  push:
  pull_request:
  release:
    types: [created]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.16
      uses: actions/setup-go@v1
      with:
        go-version: 1.16
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
    - name: Lint, test and build
      run: |
        # Get golint
        export PATH=$PATH:$(go env GOPATH)/bin
        go install golang.org/x/lint/golint@v0.0.0-20201208152925-83fdc39ff7b5

        # Lint and test
        make vendor
        make lint
        make beautify

        # Exit if after beautification there are any code differences
        git diff --exit-code

        make unittest

        # Build
        if [ ${{ github.event_name }} == "release" ]; then
          # github.ref is in the form refs/tags/VERSION, so apply regex to just get version
          VERSION=$(echo "${{ github.ref }}" | grep -P '([^\/]+$)' -o)
        else
          VERSION=$(git rev-parse --short ${{ github.sha }})
        fi
        make docker VERSION=${VERSION}
    - name: Deploy
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      if: github.event_name != 'pull_request' && github.repository == 'jthomperoo/horizontal-pod-autoscaler'
      run: |
        if [ ${{ github.event_name }} == "release" ]; then
          # github.ref is in the form refs/tags/VERSION, so apply regex to just get version
          VERSION=$(echo "${{ github.ref }}" | grep -P '([^\/]+$)' -o)
        else
          VERSION=$(git rev-parse --short ${{ github.sha }})
        fi
        echo "$DOCKER_PASS" | docker login --username=$DOCKER_USER --password-stdin
        docker push jthomperoo/horizontal-pod-autoscaler:${VERSION}
        if [ ${{ github.event_name }} == "release" ]; then
          docker tag jthomperoo/horizontal-pod-autoscaler:${VERSION} jthomperoo/horizontal-pod-autoscaler:latest
          docker push jthomperoo/horizontal-pod-autoscaler:latest
        fi
